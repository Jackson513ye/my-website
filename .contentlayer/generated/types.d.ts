// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer2/core'
import * as Local from 'contentlayer2/source-files'

export { isType } from 'contentlayer2/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Career = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Career'
  title: string
  company: string
  companyLogo: string
  location: string
  description: string
  applicationDeadline: string
  applicationLink: string
  /** MDX file body */
  body: MDX
  readingTime: json
  slug: string
  path: string
  filePath: string
  toc: json
}

export type Event = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Event'
  title: string
  date: IsoDateTimeString
  endDate?: IsoDateTimeString | undefined
  time?: string | undefined
  eventType?: 'single' | 'multi-day' | 'all-day' | undefined
  location: string
  excerpt?: string | undefined
  image?: string | undefined
  /** MDX file body */
  body: MDX
  readingTime: json
  slug: string
  path: string
  filePath: string
  toc: json
}

export type Gallery = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Gallery'
  title: string
  date: IsoDateTimeString
  image: string
  link: string
  /** MDX file body */
  body: MDX
  readingTime: json
  slug: string
  path: string
  filePath: string
  toc: json
}

export type Partner = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Partner'
  name: string
  logo: string
  website: string
  description: string
  /** MDX file body */
  body: MDX
  readingTime: json
  slug: string
  path: string
  filePath: string
  toc: json
}

export type Project = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Project'
  title: string
  date: IsoDateTimeString
  endDate?: IsoDateTimeString | undefined
  role?: string | undefined
  mentors?: string | undefined
  excerpt?: string | undefined
  image?: string | undefined
  external?: string | undefined
  /** MDX file body */
  body: MDX
  readingTime: json
  slug: string
  path: string
  filePath: string
  toc: json
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Career | Event | Gallery | Partner | Project
export type DocumentTypeNames = 'Career' | 'Event' | 'Gallery' | 'Partner' | 'Project'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allEvents: Event[]
  allGalleries: Gallery[]
  allPartners: Partner[]
  allCareers: Career[]
  allProjects: Project[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Career: Career
  Event: Event
  Gallery: Gallery
  Partner: Partner
  Project: Project
}

export type NestedTypeMap = {

}

 